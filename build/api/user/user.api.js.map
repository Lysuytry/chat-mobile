{"version":3,"sources":["../../../src/api/user/user.api.js"],"names":["getUserList","req","res","limit","skip","query","user","count","Promise","all","User","aggregate","$limit","$skip","success","error","fail","stack","createUser","username","channelId","body","check","findOne","findOneAndUpdate","$set","upsert","new","console","log","updateUser","id","params","updateOne","_id","deleteUser","getUserById","result","findById"],"mappings":";;;;;;;AAAA;;;;;;AAEO,MAAMA,oCAAc,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7C,MAAI;AACF,UAAM,EAAEC,KAAF,EAASC,IAAT,KAAkBH,IAAII,KAA5B;AACA,UAAM,CAACC,IAAD,EAAOC,KAAP,IAAgB,MAAMC,QAAQC,GAAR,CAAY,CAACC,eAAKC,SAAL,CAAe,CAAC,EAAEC,QAAQT,KAAV,EAAD,EAAoB,EAAEU,OAAOT,IAAT,EAApB,CAAf,CAAD,EAAuDM,eAAKH,KAAL,EAAvD,CAAZ,CAA5B;AACAL,QAAIY,OAAJ,CAAYR,IAAZ,EAAkB,EAAEC,OAAO,CAACA,KAAV,EAAiBJ,KAAjB,EAAwBC,IAAxB,EAAlB;AACD,GAJD,CAIE,OAAOW,KAAP,EAAc;AACdb,QAAIc,IAAJ,CAASD,MAAME,KAAf;AACD;AACF,CARM;;AAUA,MAAMC,kCAAa,OAAOjB,GAAP,EAAYC,GAAZ,KAAoB;AAC5C,MAAI;AACF,UAAM,EAAEiB,QAAF,EAAYC,SAAZ,KAA0BnB,IAAIoB,IAApC;AACA,UAAMC,QAAQ,MAAMZ,eAAKa,OAAL,CAAa,EAAEJ,QAAF,EAAYC,SAAZ,EAAb,CAApB;AACA,QAAIE,KAAJ,EAAW,OAAOpB,IAAIc,IAAJ,CAAS,4BAAT,EAAuC,GAAvC,CAAP;AACX,UAAMV,OAAO,MAAMI,eAAKc,gBAAL,CACjB,EAAEL,QAAF,EAAYC,WAAW,IAAvB,EADiB,EAEjB,EAAEK,MAAMxB,IAAIoB,IAAZ,EAFiB,EAGjB,EAAEK,QAAQ,IAAV,EAAgBC,KAAK,IAArB,EAHiB,CAAnB;AAKA;AACA,WAAOzB,IAAIY,OAAJ,CAAYR,IAAZ,CAAP;AACD,GAXD,CAWE,OAAOS,KAAP,EAAc;AACda,YAAQC,GAAR,CAAYd,MAAME,KAAlB;AACA,WAAOf,IAAIc,IAAJ,CAAS,oBAAT,CAAP;AACD;AACF,CAhBM;;AAkBA,MAAMc,kCAAa,OAAO7B,GAAP,EAAYC,GAAZ,KAAoB;AAC5C,MAAI;AACF,UAAM,EAAE6B,EAAF,KAAS9B,IAAI+B,MAAnB;AACA,UAAMtB,eAAKuB,SAAL,CAAe,EAAEC,KAAKH,EAAP,EAAf,EAA4B,EAAEN,MAAMxB,IAAIoB,IAAZ,EAA5B,CAAN;AACAnB,QAAIY,OAAJ,CAAY,uBAAZ;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdb,QAAIc,IAAJ,CAASD,KAAT;AACD;AACF,CARM;;AAUA,MAAMoB,kCAAa,OAAOlC,GAAP,EAAYC,GAAZ,KAAoB;AAC5C,MAAI;AACF,UAAM,EAAE6B,EAAF,KAAS9B,IAAI+B,MAAnB;AACA,UAAM,0BAAeD,EAAf,CAAN;AACA7B,QAAIY,OAAJ,CAAY,uBAAZ;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdb,QAAIc,IAAJ,CAASD,KAAT;AACD;AACF,CARM;;AAUA,MAAMqB,oCAAc,OAAOnC,GAAP,EAAYC,GAAZ,KAAoB;AAC7C,MAAI;AACF,UAAM,EAAE6B,EAAF,KAAS9B,IAAI+B,MAAnB;AACA,UAAMK,SAAS,MAAM3B,eAAK4B,QAAL,CAAcP,EAAd,CAArB;AACA7B,QAAIY,OAAJ,CAAYuB,MAAZ;AACD,GAJD,CAIE,OAAOtB,KAAP,EAAc;AACdb,QAAIc,IAAJ,CAASD,KAAT;AACD;AACF,CARM","file":"user.api.js","sourcesContent":["import User, { deleteUserById } from '../../models/user';\n\nexport const getUserList = async (req, res) => {\n  try {\n    const { limit, skip } = req.query;\n    const [user, count] = await Promise.all([User.aggregate([{ $limit: limit }, { $skip: skip }]), User.count()]);\n    res.success(user, { count: +count, limit, skip });\n  } catch (error) {\n    res.fail(error.stack);\n  }\n};\n\nexport const createUser = async (req, res) => {\n  try {\n    const { username, channelId } = req.body;\n    const check = await User.findOne({ username, channelId });\n    if (check) return res.fail('Username is already taken!', 500);\n    const user = await User.findOneAndUpdate(\n      { username, channelId: null },\n      { $set: req.body },\n      { upsert: true, new: true }\n    );\n    //const user = await User.create(req.body);\n    return res.success(user);\n  } catch (error) {\n    console.log(error.stack);\n    return res.fail('create user error.');\n  }\n};\n\nexport const updateUser = async (req, res) => {\n  try {\n    const { id } = req.params;\n    await User.updateOne({ _id: id }, { $set: req.body });\n    res.success('Updated Successfully.');\n  } catch (error) {\n    res.fail(error);\n  }\n};\n\nexport const deleteUser = async (req, res) => {\n  try {\n    const { id } = req.params;\n    await deleteUserById(id);\n    res.success('Successfully deleted.');\n  } catch (error) {\n    res.fail(error);\n  }\n};\n\nexport const getUserById = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const result = await User.findById(id);\n    res.success(result);\n  } catch (error) {\n    res.fail(error);\n  }\n};\n"]}