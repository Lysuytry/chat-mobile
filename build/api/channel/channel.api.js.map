{"version":3,"sources":["../../../src/api/channel/channel.api.js"],"names":["createChannel","req","res","name","body","channel","Channel","result","save","success","error","fail","message","getChannelList","limit","skip","status","query","condition","channels","total","Promise","all","find","count","getChannelById","id","params","findOne","_id","updateChannelById","data","conditions","$set","updateOne","deleteChannelById","console","log"],"mappings":";;;;;;;AAAA;;;;;;AAEO,MAAMA,wCAAgB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/C,MAAI;AACF,UAAM,EAAEC,IAAF,KAAWF,IAAIG,IAArB;AACA,UAAMC,UAAU,IAAIC,iBAAJ,CAAY,EAAEH,IAAF,EAAZ,CAAhB;AACA,UAAMI,SAAS,MAAMF,QAAQG,IAAR,EAArB;AACAN,QAAIO,OAAJ,CAAYF,MAAZ;AACD,GALD,CAKE,OAAOG,KAAP,EAAc;AACdR,QAAIS,IAAJ,CAASD,MAAME,OAAf;AACD;AACF,CATM;;AAWA,MAAMC,0CAAiB,OAAOZ,GAAP,EAAYC,GAAZ,KAAoB;AAChD,MAAI;AACF,UAAM,EAAEY,KAAF,EAASC,IAAT,EAAeC,MAAf,KAA0Bf,IAAIgB,KAApC;;AAEA,UAAMC,YAAY,EAAEF,MAAF,EAAlB;;AAEA,UAAM,CAACG,QAAD,EAAWC,KAAX,IAAoB,MAAMC,QAAQC,GAAR,CAAY,CAC1ChB,kBAAQiB,IAAR,CAAaL,SAAb,EACGH,IADH,CACQA,IADR,EAEGD,KAFH,CAESA,KAFT,CAD0C,EAI1CR,kBAAQkB,KAAR,CAAcN,SAAd,CAJ0C,CAAZ,CAAhC;AAMAhB,QAAIO,OAAJ,CAAYU,QAAZ,EAAsB,EAAEL,KAAF,EAASC,IAAT,EAAeK,KAAf,EAAtB;AACD,GAZD,CAYE,OAAOV,KAAP,EAAc;AACdR,QAAIS,IAAJ,CAASD,MAAME,OAAf;AACD;AACF,CAhBM;;AAkBA,MAAMa,0CAAiB,OAAOxB,GAAP,EAAYC,GAAZ,KAAoB;AAChD,MAAI;AACF,UAAM,EAAEwB,EAAF,KAASzB,IAAI0B,MAAnB;AACA,UAAM,EAAEX,MAAF,KAAaf,IAAIgB,KAAvB;AACA,UAAMZ,UAAU,MAAMC,kBAAQsB,OAAR,CAAgB,EAAEC,KAAKH,EAAP,EAAWV,MAAX,EAAhB,CAAtB;AACAd,QAAIO,OAAJ,CAAYJ,OAAZ;AACD,GALD,CAKE,OAAOK,KAAP,EAAc;AACdR,QAAIS,IAAJ,CAASD,MAAME,OAAf;AACD;AACF,CATM;;AAWA,MAAMkB,gDAAoB,OAAO7B,GAAP,EAAYC,GAAZ,KAAoB;AACnD,MAAI;AACF,UAAM,EAAEwB,EAAF,KAASzB,IAAI0B,MAAnB;AACA,UAAM,EAAEX,MAAF,KAAaf,IAAIgB,KAAvB;AACA,UAAMc,OAAO9B,IAAIG,IAAjB;AACA,UAAM4B,aAAa,CAAC,EAAEH,KAAKH,EAAP,EAAWV,MAAX,EAAD,EAAsB,EAAEiB,MAAMF,IAAR,EAAtB,CAAnB;AACA,UAAMzB,kBAAQ4B,SAAR,CAAkB,GAAGF,UAArB,CAAN;AACA9B,QAAIO,OAAJ,CAAY,uBAAZ;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdR,QAAIS,IAAJ,CAASD,MAAME,OAAf;AACD;AACF,CAXM;;AAaA,MAAMuB,gDAAoB,OAAOlC,GAAP,EAAYC,GAAZ,KAAoB;AACnD,MAAI;AACF,UAAM,EAAEwB,EAAF,KAASzB,IAAI0B,MAAnB;AACA,UAAMK,aAAa,CAAC,EAAEH,KAAKH,EAAP,EAAWV,QAAQ,QAAnB,EAAD,EAAgC,EAAEiB,MAAM,EAAEjB,QAAQ,UAAV,EAAR,EAAhC,CAAnB;AACA,UAAMT,SAAS,MAAMD,kBAAQ4B,SAAR,CAAkB,GAAGF,UAArB,CAArB;AACAI,YAAQC,GAAR,CAAY9B,MAAZ;AACAL,QAAIO,OAAJ,CAAY,uBAAZ;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACdR,QAAIS,IAAJ,CAASD,MAAME,OAAf;AACD;AACF,CAVM","file":"channel.api.js","sourcesContent":["import Channel from '../../models/channel';\n\nexport const createChannel = async (req, res) => {\n  try {\n    const { name } = req.body;\n    const channel = new Channel({ name });\n    const result = await channel.save();\n    res.success(result);\n  } catch (error) {\n    res.fail(error.message);\n  }\n};\n\nexport const getChannelList = async (req, res) => {\n  try {\n    const { limit, skip, status } = req.query;\n\n    const condition = { status };\n\n    const [channels, total] = await Promise.all([\n      Channel.find(condition)\n        .skip(skip)\n        .limit(limit),\n      Channel.count(condition)\n    ]);\n    res.success(channels, { limit, skip, total });\n  } catch (error) {\n    res.fail(error.message);\n  }\n};\n\nexport const getChannelById = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const { status } = req.query;\n    const channel = await Channel.findOne({ _id: id, status });\n    res.success(channel);\n  } catch (error) {\n    res.fail(error.message);\n  }\n};\n\nexport const updateChannelById = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const { status } = req.query;\n    const data = req.body;\n    const conditions = [{ _id: id, status }, { $set: data }];\n    await Channel.updateOne(...conditions);\n    res.success('Successfully Updated.');\n  } catch (error) {\n    res.fail(error.message);\n  }\n};\n\nexport const deleteChannelById = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const conditions = [{ _id: id, status: 'active' }, { $set: { status: 'inactive' } }];\n    const result = await Channel.updateOne(...conditions);\n    console.log(result);\n    res.success('Successfully deleted.');\n  } catch (error) {\n    res.fail(error.message);\n  }\n};\n"]}