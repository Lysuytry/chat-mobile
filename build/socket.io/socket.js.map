{"version":3,"sources":["../../src/socket.io/socket.js"],"names":["users","chatHandler","socket","on","userId","filter","item","id","push","data","forEach","error","console","log","reason","onlineHandler","name","channel","username","emit","broadcast"],"mappings":"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","file":"socket.js","sourcesContent":["import { leftChannel, joinChannel } from '../models/user';\r\nimport { createMessage } from '../models/message';\r\n\r\nlet users = [];\r\n\r\nexport const chatHandler = socket => {\r\n  socket.on('join', userId => {\r\n    users = users.filter(item => item.id !== socket.id);\r\n    users.push({ id: socket.id, userId: userId });\r\n    joinChannel(userId, socket);\r\n  });\r\n\r\n  socket.on('left', userId => {\r\n    users = users.filter(item => item.id !== socket.id);\r\n    leftChannel(userId, socket);\r\n  });\r\n\r\n  socket.on('newMessage', data => {\r\n    createMessage(data, socket);\r\n  });\r\n\r\n  socket.on('disconnect', () => {\r\n    users.forEach(item => {\r\n      if (item.id === socket.id) {\r\n        //console.log(item.id);\r\n        leftChannel(item.userId, socket);\r\n      }\r\n    });\r\n    users = users.filter(item => item.id !== socket.id);\r\n  });\r\n\r\n  socket.on('error', (error) => {\r\n    console.log('error',error);\r\n  });\r\n\r\n  socket.on('disconnecting', (reason) => {\r\n    console.log(reason);\r\n    users.forEach(item => {\r\n      if (item.id === socket.id) {\r\n        //console.log(item.id);\r\n        leftChannel(item.userId, socket);\r\n      }\r\n    });\r\n    users = users.filter(item => item.id !== socket.id);\r\n  });\r\n};\r\n\r\nexport const onlineHandler = socket => {\r\n  socket.on('join', data => {\r\n    const { name, channel } = data;\r\n    users = users.filter(item => item.id !== socket.id);\r\n    users.push({ id: socket.id, username: name, channel });\r\n    socket.emit('updateOnline', users);\r\n    socket.broadcast.emit('updateOnline', users);\r\n  });\r\n\r\n  socket.on('online', data => {\r\n    const { name, channel } = data;\r\n    users = users.filter(item => item.id !== socket.id);\r\n    users.push({ id: socket.id, username: name, channel });\r\n    socket.emit('updateOnline', users);\r\n    socket.broadcast.emit('updateOnline', users);\r\n  });\r\n\r\n  socket.on('disconnect', () => {\r\n    users = users.filter(item => item.id !== socket.id);\r\n    socket.emit('updateOnline', users);\r\n    socket.broadcast.emit('updateOnline', users);\r\n  });\r\n};\r\n"]}