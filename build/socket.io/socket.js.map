{"version":3,"sources":["../../src/socket.io/socket.js"],"names":["users","chatHandler","socket","on","userId","filter","item","id","push","data","forEach","onlineHandler","name","channel","username","emit","broadcast"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,IAAIA,QAAQ,EAAZ;;AAEO,MAAMC,oCAAcC,UAAU;AACnCA,SAAOC,EAAP,CAAU,MAAV,EAAkBC,UAAU;AAC1BJ,YAAQA,MAAMK,MAAN,CAAaC,QAAQA,KAAKC,EAAL,KAAYL,OAAOK,EAAxC,CAAR;AACAP,UAAMQ,IAAN,CAAW,EAAED,IAAIL,OAAOK,EAAb,EAAiBH,QAAQA,MAAzB,EAAX;AACA,2BAAYA,MAAZ,EAAoBF,MAApB;AACD,GAJD;;AAMAA,SAAOC,EAAP,CAAU,MAAV,EAAkBC,UAAU;AAC1BJ,YAAQA,MAAMK,MAAN,CAAaC,QAAQA,KAAKC,EAAL,KAAYL,OAAOK,EAAxC,CAAR;AACA,2BAAYH,MAAZ,EAAoBF,MAApB;AACD,GAHD;;AAKAA,SAAOC,EAAP,CAAU,YAAV,EAAwBM,QAAQ;AAC9B,gCAAcA,IAAd,EAAoBP,MAApB;AACD,GAFD;;AAIAA,SAAOC,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BH,UAAMU,OAAN,CAAcJ,QAAQ;AACpB,UAAIA,KAAKC,EAAL,KAAYL,OAAOK,EAAvB,EAA2B;AACzB,+BAAYD,KAAKF,MAAjB,EAAyBF,MAAzB;AACD;AACF,KAJD;AAKAF,YAAQA,MAAMK,MAAN,CAAaC,QAAQA,KAAKC,EAAL,KAAYL,OAAOK,EAAxC,CAAR;AACD,GAPD;AAQD,CAxBM;;AA0BA,MAAMI,wCAAgBT,UAAU;AACrCA,SAAOC,EAAP,CAAU,MAAV,EAAkBM,QAAQ;AACxB,UAAM,EAAEG,IAAF,EAAQC,OAAR,KAAoBJ,IAA1B;AACAT,YAAQA,MAAMK,MAAN,CAAaC,QAAQA,KAAKC,EAAL,KAAYL,OAAOK,EAAxC,CAAR;AACAP,UAAMQ,IAAN,CAAW,EAAED,IAAIL,OAAOK,EAAb,EAAiBO,UAAUF,IAA3B,EAAiCC,OAAjC,EAAX;AACAX,WAAOa,IAAP,CAAY,cAAZ,EAA4Bf,KAA5B;AACAE,WAAOc,SAAP,CAAiBD,IAAjB,CAAsB,cAAtB,EAAsCf,KAAtC;AACD,GAND;;AAQAE,SAAOC,EAAP,CAAU,QAAV,EAAoBM,QAAQ;AAC1B,UAAM,EAAEG,IAAF,EAAQC,OAAR,KAAoBJ,IAA1B;AACAT,YAAQA,MAAMK,MAAN,CAAaC,QAAQA,KAAKC,EAAL,KAAYL,OAAOK,EAAxC,CAAR;AACAP,UAAMQ,IAAN,CAAW,EAAED,IAAIL,OAAOK,EAAb,EAAiBO,UAAUF,IAA3B,EAAiCC,OAAjC,EAAX;AACAX,WAAOa,IAAP,CAAY,cAAZ,EAA4Bf,KAA5B;AACAE,WAAOc,SAAP,CAAiBD,IAAjB,CAAsB,cAAtB,EAAsCf,KAAtC;AACD,GAND;;AAQAE,SAAOC,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BH,YAAQA,MAAMK,MAAN,CAAaC,QAAQA,KAAKC,EAAL,KAAYL,OAAOK,EAAxC,CAAR;AACAL,WAAOa,IAAP,CAAY,cAAZ,EAA4Bf,KAA5B;AACAE,WAAOc,SAAP,CAAiBD,IAAjB,CAAsB,cAAtB,EAAsCf,KAAtC;AACD,GAJD;AAKD,CAtBM","file":"socket.js","sourcesContent":["import { leftChannel, joinChannel } from '../models/user';\nimport { createMessage } from '../models/message';\n\nlet users = [];\n\nexport const chatHandler = socket => {\n  socket.on('join', userId => {\n    users = users.filter(item => item.id !== socket.id);\n    users.push({ id: socket.id, userId: userId });\n    joinChannel(userId, socket);\n  });\n\n  socket.on('left', userId => {\n    users = users.filter(item => item.id !== socket.id);\n    leftChannel(userId, socket);\n  });\n\n  socket.on('newMessage', data => {\n    createMessage(data, socket);\n  });\n\n  socket.on('disconnect', () => {\n    users.forEach(item => {\n      if (item.id === socket.id) {\n        leftChannel(item.userId, socket);\n      }\n    });\n    users = users.filter(item => item.id !== socket.id);\n  });\n};\n\nexport const onlineHandler = socket => {\n  socket.on('join', data => {\n    const { name, channel } = data;\n    users = users.filter(item => item.id !== socket.id);\n    users.push({ id: socket.id, username: name, channel });\n    socket.emit('updateOnline', users);\n    socket.broadcast.emit('updateOnline', users);\n  });\n\n  socket.on('online', data => {\n    const { name, channel } = data;\n    users = users.filter(item => item.id !== socket.id);\n    users.push({ id: socket.id, username: name, channel });\n    socket.emit('updateOnline', users);\n    socket.broadcast.emit('updateOnline', users);\n  });\n\n  socket.on('disconnect', () => {\n    users = users.filter(item => item.id !== socket.id);\n    socket.emit('updateOnline', users);\n    socket.broadcast.emit('updateOnline', users);\n  });\n};\n"]}