{"version":3,"sources":["../../src/models/user.js"],"names":["userSchema","username","type","String","required","unique","channelId","Schema","Types","ObjectId","ref","timestamps","User","mongoose","model","deleteUserById","id","result","deleteOne","_id","error","leftChannel","updateOne","$set","joinChannel"],"mappings":";;;;;;;AAAA;;;;;;AAEA,MAAMA,aAAa,sBACjB;AACEC,YAAU,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAAgCC,QAAQ,IAAxC,EADZ;AAEEC,aAAW,EAAEJ,MAAMK,iBAAOC,KAAP,CAAaC,QAArB,EAA+BC,KAAK,SAApC;AAFb,CADiB,EAKjB,EAAEC,YAAY,IAAd,EALiB,CAAnB;;AAQA,MAAMC,OAAOC,mBAASC,KAAT,CAAe,MAAf,EAAuBd,UAAvB,CAAb;;AAEO,MAAMe,0CAAiB,MAAMC,EAAN,IAAY;AACxC,MAAI;AACF,UAAMC,SAAS,MAAML,KAAKM,SAAL,CAAe,EAAEC,KAAKH,EAAP,EAAf,CAArB;AACA,WAAOC,MAAP;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAPM;;AASA,MAAMC,oCAAc,MAAML,EAAN,IAAY;AACrC,MAAI;AACF,UAAMC,SAAS,MAAML,KAAKU,SAAL,CAAe,EAAEH,KAAKH,EAAP,EAAf,EAA4B,EAAEO,MAAM,EAAEjB,WAAW,IAAb,EAAR,EAA5B,CAArB;AACA,WAAOW,MAAP;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAPM;;AASA,MAAMI,oCAAc,OAAOR,EAAP,EAAWV,SAAX,KAAyB;AAClD,MAAI;AACF,UAAMW,SAAS,MAAML,KAAKU,SAAL,CAAe,EAAEH,KAAKH,EAAP,EAAf,EAA4B,EAAEO,MAAM,EAAEjB,SAAF,EAAR,EAA5B,CAArB;AACA,WAAOW,MAAP;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAPM;;kBASQR,I","file":"user.js","sourcesContent":["import mongoose, { Schema } from 'mongoose';\n\nconst userSchema = Schema(\n  {\n    username: { type: String, required: true, unique: true },\n    channelId: { type: Schema.Types.ObjectId, ref: 'Channel' }\n  },\n  { timestamps: true }\n);\n\nconst User = mongoose.model('User', userSchema);\n\nexport const deleteUserById = async id => {\n  try {\n    const result = await User.deleteOne({ _id: id });\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const leftChannel = async id => {\n  try {\n    const result = await User.updateOne({ _id: id }, { $set: { channelId: null } });\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const joinChannel = async (id, channelId) => {\n  try {\n    const result = await User.updateOne({ _id: id }, { $set: { channelId } });\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport default User;\n"]}