{"version":3,"sources":["../src/app.js"],"names":["DBNAME","DBUSER","DBPASS","process","env","mongoose","connect","console","log","app","use","body","json","urlencoded","extended","all","req","res","next","header","success","data","options","code","status","message","fail","file","path","join","__dirname","sendFile","userRoute","channelRoute"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAM,EAAEA,MAAF,EAAUC,MAAV,EAAkBC,MAAlB,KAA6BC,QAAQC,GAA3C;;AAEAC,mBAASC,OAAT,CACG,aAAYL,MAAO,IAAGC,MAAO,4BAA2BF,MAAO,EADlE,EAEE,MAAM;AACJO,UAAQC,GAAR,CAAY,gBAAZ;AACD,CAJH;;AAOA,MAAMC,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAD,IAAIC,GAAJ,CAAQC,qBAAKC,IAAL,EAAR;AACAH,IAAIC,GAAJ,CAAQC,qBAAKE,UAAL,CAAgB,EAAEC,UAAU,KAAZ,EAAhB,CAAR;;AAEAL,IAAIM,GAAJ,CAAQ,IAAR,EAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAChCD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,mDAA3C;AACAD;AACD,CAJD;;AAMAT,IAAIC,GAAJ,CAAQ,CAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1B;AACA,gCAAYF,GAAZ;AACA;AACAC,MAAIG,OAAJ,GAAc,CAACC,IAAD,EAAOC,OAAP,EAAgBC,OAAO,GAAvB,KAA+B;AAC3C,WAAO,OAAOF,IAAP,KAAgB,QAAhB,GACHC,UACEL,IAAIO,MAAJ,CAAWD,IAAX,EAAiBX,IAAjB,CAAsB,EAAES,IAAF,EAAQC,OAAR,EAAtB,CADF,GAEEL,IAAIO,MAAJ,CAAWD,IAAX,EAAiBX,IAAjB,CAAsBS,IAAtB,CAHC,GAIHJ,IAAIO,MAAJ,CAAWD,IAAX,EAAiBX,IAAjB,CAAsB,EAAEa,SAASJ,IAAX,EAAtB,CAJJ;AAKD,GAND;AAOA;AACAJ,MAAIS,IAAJ,GAAW,CAACD,OAAD,EAAUF,OAAO,GAAjB,KAAyB;AAClChB,YAAQC,GAAR,CAAYiB,OAAZ;AACA,WAAOR,IAAIO,MAAJ,CAAWD,IAAX,EAAiBX,IAAjB,CAAsB,EAAEa,OAAF,EAAtB,CAAP;AACD,GAHD;AAIA;AACAP;AACD,CAlBD;;AAoBAT,IAAIC,GAAJ,CAAQ,OAAR,EAAiB,CAACM,GAAD,EAAMC,GAAN,KAAc;AAC7B,QAAMU,OAAOC,eAAKC,IAAL,CAAUC,YAAY,uBAAtB,CAAb;AACAb,MAAIc,QAAJ,CAAaJ,IAAb;AACD,CAHD;;AAKAlB,IAAIC,GAAJ,CAAQ,eAAR,EAAyBsB,cAAzB;AACA;AACA;AACA;AACAvB,IAAIC,GAAJ,CAAS,kBAAT,EAA4BuB,iBAA5B;;kBAEexB,G","file":"app.js","sourcesContent":["import express from 'express';\nimport { filterQuery } from './common/filter-query';\nimport logger from 'morgan';\nimport body from 'body-parser';\nimport 'dotenv/config';\nimport mongoose from 'mongoose';\nimport userRoute from './api/user/user.route';\nimport channelRoute from './api/channel/channel.route';\nimport path from 'path';\n\nconst { DBNAME, DBUSER, DBPASS } = process.env;\n\nmongoose.connect(\n  `mongodb://${DBUSER}:${DBPASS}@ds243441.mlab.com:43441/${DBNAME}`,\n  () => {\n    console.log('connected mLab');\n  }\n);\n\nconst app = express();\n\napp.use(logger('dev'));\napp.use(body.json());\napp.use(body.urlencoded({ extended: false }));\n\napp.all('/*', (req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', 'Content-Type,accept,access_token,X-Requested-With');\n  next();\n});\n\napp.use((req, res, next) => {\n  //bind query\n  filterQuery(req);\n  //for response success\n  res.success = (data, options, code = 200) => {\n    return typeof data === 'object'\n      ? options\n        ? res.status(code).json({ data, options })\n        : res.status(code).json(data)\n      : res.status(code).json({ message: data });\n  };\n  //for response error\n  res.fail = (message, code = 500) => {\n    console.log(message);\n    return res.status(code).json({ message });\n  };\n  //parse to next\n  next();\n});\n\napp.use('/test', (req, res) => {\n  const file = path.join(__dirname + '../../html/index.html');\n  res.sendFile(file);\n});\n\napp.use('/api/v1/users', userRoute);\n// app.use((req, res) => {\n//   res.success('hello');\n// });\napp.use(`/api/v1/channels`, channelRoute);\n\nexport default app;\n"]}